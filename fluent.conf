<source>
  @type tail
  path /logs/squid.access.log
  pos_file /tmp/httpd-access.log.pos
  tag squid.access
  <parse>
    @type regexp
#    expression /^\[(?<logtime>[^\]]*)\] (?<srcip>[^ ]*) (?<action>[^ ]*) (?<bytes>\d*) (?<method>[^ ]*) (?<url>[^ ]*) (?<username>[^ ]*) (?<remainder>[^ ]*)$/
    expression /^\[(?<logtime>[^\]]*)\] (?<srcip>[^ ]*)/
    time_key logtime
    time_format %Y-%m-%d %H:%M:%S
    types id:integer
  </parse>
</source>

<filter **>
  @type stdout
</filter>


<match squid.access>
  @type cloudwatch_logs
  log_group_name /lan/docker/squid
  log_stream_name accesslog
  auto_create_stream true
  #message_keys key1,key2,key3,...
  #max_message_length 32768
  #use_tag_as_group false
  #use_tag_as_stream false
  #include_time_key true
  #localtime true
  #log_group_name_key group_name_key
  #log_stream_name_key stream_name_key
  #remove_log_group_name_key true
  #remove_log_stream_name_key true
  #put_log_events_retry_wait 1s
  #put_log_events_retry_limit 17
  #put_log_events_disable_retry_limit false
  #endpoint http://localhost:5000/
  #json_handler json
  #log_rejected_request true
  #<web_identity_credentials>
  #  role_arn          "#{ENV['AWS_ROLE_ARN']}"
  #  role_session_name ROLE_SESSION_NAME
  #  web_identity_token_file "#{ENV['AWS_WEB_IDENTITY_TOKEN_FILE']}"
  #</web_identity_credentials>
  #<format>
  #  @type ltsv
  #</format>
</match>


